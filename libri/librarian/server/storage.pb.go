// Code generated by protoc-gen-go.
// source: storage.proto
// DO NOT EDIT!

/*
Package server is a generated protocol buffer package.

It is generated from these files:
	storage.proto

It has these top-level messages:
	StoredPeer
	StoredRoutingTable
*/
package server

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Peer is the basic information associated with each peer in the network.
type StoredPeer struct {
	// big-endian byte representation of 32-byte ID
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// self-reported name of the peer
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// public IP address
	AddressIp string `protobuf:"bytes,3,opt,name=address_ip,json=addressIp" json:"address_ip,omitempty"`
	// public address TCP port
	AddressPort uint32 `protobuf:"varint,4,opt,name=address_port,json=addressPort" json:"address_port,omitempty"`
	// epoch time (seconds since 1970 UTC) of the latest response from the node.
	LatestResponse int64 `protobuf:"varint,5,opt,name=latest_response,json=latestResponse" json:"latest_response,omitempty"`
}

func (m *StoredPeer) Reset()                    { *m = StoredPeer{} }
func (m *StoredPeer) String() string            { return proto.CompactTextString(m) }
func (*StoredPeer) ProtoMessage()               {}
func (*StoredPeer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StoredPeer) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StoredPeer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StoredPeer) GetAddressIp() string {
	if m != nil {
		return m.AddressIp
	}
	return ""
}

func (m *StoredPeer) GetAddressPort() uint32 {
	if m != nil {
		return m.AddressPort
	}
	return 0
}

func (m *StoredPeer) GetLatestResponse() int64 {
	if m != nil {
		return m.LatestResponse
	}
	return 0
}

// StoredRoutingTable contains the essential information associated with a routing table.
type StoredRoutingTable struct {
	// big-endian byte representation of 32-byte self ID
	SelfId []byte `protobuf:"bytes,1,opt,name=self_id,json=selfId,proto3" json:"self_id,omitempty"`
	// map of peers, keyed by string-encoding of the peer's I
	Peers map[string]*StoredPeer `protobuf:"bytes,2,rep,name=peers" json:"peers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *StoredRoutingTable) Reset()                    { *m = StoredRoutingTable{} }
func (m *StoredRoutingTable) String() string            { return proto.CompactTextString(m) }
func (*StoredRoutingTable) ProtoMessage()               {}
func (*StoredRoutingTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StoredRoutingTable) GetSelfId() []byte {
	if m != nil {
		return m.SelfId
	}
	return nil
}

func (m *StoredRoutingTable) GetPeers() map[string]*StoredPeer {
	if m != nil {
		return m.Peers
	}
	return nil
}

func init() {
	proto.RegisterType((*StoredPeer)(nil), "server.StoredPeer")
	proto.RegisterType((*StoredRoutingTable)(nil), "server.StoredRoutingTable")
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0xc9, 0x6e, 0x5b, 0xe9, 0xf4, 0x8f, 0x32, 0x17, 0x83, 0x20, 0xac, 0x05, 0x31, 0xa7,
	0x3d, 0xd4, 0x8b, 0xe8, 0xd9, 0x43, 0xc1, 0x43, 0x89, 0xde, 0x4b, 0x4a, 0xc6, 0xb2, 0xb8, 0x6e,
	0xc2, 0x24, 0x2d, 0xf4, 0xb3, 0xf8, 0x45, 0xfc, 0x78, 0xb2, 0x9b, 0x55, 0x11, 0x6f, 0x93, 0xdf,
	0x64, 0x1e, 0xef, 0x3d, 0x98, 0x85, 0xe8, 0xd8, 0xec, 0xa8, 0xf4, 0xec, 0xa2, 0xc3, 0x51, 0x20,
	0x3e, 0x10, 0x2f, 0x3e, 0x04, 0xc0, 0x73, 0x74, 0x4c, 0x76, 0x4d, 0xc4, 0x38, 0x87, 0xac, 0xb2,
	0x52, 0x14, 0x42, 0x4d, 0x75, 0x56, 0x59, 0x44, 0x18, 0x34, 0xe6, 0x9d, 0x64, 0x56, 0x08, 0x35,
	0xd6, 0xdd, 0x8c, 0x97, 0x00, 0xc6, 0x5a, 0xa6, 0x10, 0x36, 0x95, 0x97, 0x79, 0xb7, 0x19, 0xf7,
	0x64, 0xe5, 0xf1, 0x0a, 0xa6, 0xdf, 0x6b, 0xef, 0x38, 0xca, 0x41, 0x21, 0xd4, 0x4c, 0x4f, 0x7a,
	0xb6, 0x76, 0x1c, 0xf1, 0x06, 0x4e, 0x6b, 0x13, 0x29, 0xc4, 0x0d, 0x53, 0xf0, 0xae, 0x09, 0x24,
	0x87, 0x85, 0x50, 0xb9, 0x9e, 0x27, 0xac, 0x7b, 0xba, 0xf8, 0x14, 0x80, 0xc9, 0x9d, 0x76, 0xfb,
	0x58, 0x35, 0xbb, 0x17, 0xb3, 0xad, 0x09, 0xcf, 0xe1, 0x24, 0x50, 0xfd, 0xba, 0xf9, 0xb1, 0x3a,
	0x6a, 0x9f, 0x2b, 0x8b, 0x0f, 0x30, 0xf4, 0x44, 0x1c, 0x64, 0x56, 0xe4, 0x6a, 0xb2, 0xbc, 0x2e,
	0x53, 0xca, 0xf2, 0xbf, 0x46, 0xd9, 0xc6, 0x0d, 0x8f, 0x4d, 0xe4, 0xa3, 0x4e, 0x37, 0x17, 0x4f,
	0x00, 0xbf, 0x10, 0xcf, 0x20, 0x7f, 0xa3, 0x63, 0xa7, 0x3f, 0xd6, 0xed, 0x88, 0x0a, 0x86, 0x07,
	0x53, 0xef, 0x53, 0x19, 0x93, 0x25, 0xfe, 0x15, 0x6f, 0x4f, 0x75, 0xfa, 0x70, 0x9f, 0xdd, 0x89,
	0xed, 0xa8, 0xeb, 0xf9, 0xf6, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x8c, 0xd6, 0xb3, 0x78, 0x01,
	0x00, 0x00,
}
