// Code generated by protoc-gen-go.
// source: pkg/api/librarian.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	pkg/api/librarian.proto

It has these top-level messages:
	PingRequest
	PingResponse
	IdentityRequest
	IdentityResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PingResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PingResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type IdentityRequest struct {
}

func (m *IdentityRequest) Reset()                    { *m = IdentityRequest{} }
func (m *IdentityRequest) String() string            { return proto.CompactTextString(m) }
func (*IdentityRequest) ProtoMessage()               {}
func (*IdentityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type IdentityResponse struct {
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	NodeId   []byte `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (m *IdentityResponse) Reset()                    { *m = IdentityResponse{} }
func (m *IdentityResponse) String() string            { return proto.CompactTextString(m) }
func (*IdentityResponse) ProtoMessage()               {}
func (*IdentityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *IdentityResponse) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *IdentityResponse) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "api.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "api.PingResponse")
	proto.RegisterType((*IdentityRequest)(nil), "api.IdentityRequest")
	proto.RegisterType((*IdentityResponse)(nil), "api.IdentityResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Librarian service

type LibrarianClient interface {
	// Demonstrates simple request/response connectivity.
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// Identifies the node name and id.
	Identify(ctx context.Context, in *IdentityRequest, opts ...grpc.CallOption) (*IdentityResponse, error)
}

type librarianClient struct {
	cc *grpc.ClientConn
}

func NewLibrarianClient(cc *grpc.ClientConn) LibrarianClient {
	return &librarianClient{cc}
}

func (c *librarianClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/api.Librarian/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianClient) Identify(ctx context.Context, in *IdentityRequest, opts ...grpc.CallOption) (*IdentityResponse, error) {
	out := new(IdentityResponse)
	err := grpc.Invoke(ctx, "/api.Librarian/Identify", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Librarian service

type LibrarianServer interface {
	// Demonstrates simple request/response connectivity.
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// Identifies the node name and id.
	Identify(context.Context, *IdentityRequest) (*IdentityResponse, error)
}

func RegisterLibrarianServer(s *grpc.Server, srv LibrarianServer) {
	s.RegisterService(&_Librarian_serviceDesc, srv)
}

func _Librarian_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Librarian/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Librarian_Identify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdentityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianServer).Identify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Librarian/Identify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianServer).Identify(ctx, req.(*IdentityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Librarian_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Librarian",
	HandlerType: (*LibrarianServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Librarian_Ping_Handler,
		},
		{
			MethodName: "Identify",
			Handler:    _Librarian_Identify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/api/librarian.proto",
}

func init() { proto.RegisterFile("pkg/api/librarian.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x14, 0x45, 0xad, 0xca, 0xcc, 0xf4, 0x39, 0xe2, 0x4c, 0x50, 0xa6, 0x8c, 0x9b, 0x21, 0xab, 0x6e,
	0x6c, 0x41, 0x57, 0xfe, 0x81, 0x05, 0x11, 0xe9, 0x0f, 0xc8, 0x2b, 0x79, 0x96, 0x87, 0x36, 0x89,
	0x4d, 0xba, 0xe8, 0xdf, 0x4b, 0x5b, 0x83, 0xa5, 0xcb, 0x7b, 0x92, 0x7b, 0x73, 0x08, 0x1c, 0xec,
	0x57, 0x9d, 0xa3, 0xe5, 0xfc, 0x9b, 0xab, 0x16, 0x5b, 0x46, 0x9d, 0xd9, 0xd6, 0x78, 0x23, 0x2e,
	0xd0, 0xb2, 0xbc, 0x86, 0xab, 0x77, 0xd6, 0x75, 0x49, 0x3f, 0x1d, 0x39, 0x2f, 0x53, 0xd8, 0x4e,
	0xd1, 0x59, 0xa3, 0x1d, 0x89, 0x04, 0xd6, 0x0d, 0x39, 0x87, 0x35, 0x25, 0xd1, 0x29, 0x4a, 0xe3,
	0x32, 0x44, 0xb9, 0x87, 0x9b, 0x42, 0x91, 0xf6, 0xec, 0xfb, 0x50, 0x7e, 0x81, 0xdd, 0x3f, 0xfa,
	0x1b, 0xb8, 0x87, 0x58, 0x1b, 0x45, 0x1f, 0x1a, 0x9b, 0x30, 0xb1, 0x19, 0xc0, 0x1b, 0x36, 0x24,
	0x0e, 0xb0, 0x1e, 0x0f, 0x59, 0x25, 0xe7, 0xa7, 0x28, 0xdd, 0x96, 0xab, 0x21, 0x16, 0xea, 0xb1,
	0x83, 0xf8, 0x35, 0xd8, 0x8a, 0x07, 0xb8, 0x1c, 0x9c, 0xc4, 0x2e, 0x43, 0xcb, 0xd9, 0xcc, 0xf6,
	0xb8, 0x9f, 0x91, 0xe9, 0x3d, 0x79, 0x26, 0x9e, 0x61, 0x33, 0x59, 0x7c, 0xf6, 0xe2, 0x76, 0xbc,
	0xb0, 0xf0, 0x3c, 0xde, 0x2d, 0x68, 0xa8, 0x56, 0xab, 0xf1, 0x63, 0x9e, 0x7e, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x55, 0xdf, 0x4f, 0x24, 0x33, 0x01, 0x00, 0x00,
}
